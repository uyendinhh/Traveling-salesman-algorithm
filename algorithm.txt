TSP:
    - First, generate a matrix containing the distance of the nodes 
    - The idea is to generate an inital path and improve it using two-opt
    - The inital path is generated as follow:
        - Iterate through the entire node list:
            - Starts at a random node
            - At each iteration, pick the 1st, 2nd, or 3th closest node to the last visited node randomly
    - Improve the inital path by flattening two crossing edges
        -  Iterate through every node v, and for each of it neighboring node,
            pick an edge that neither side of its edge is next to v,
            If the two edges are crossing:
                flatten them
    - After improving the inital path, we will have the best path so far,
        The cost of the route mainly depends on the inital path,
        if the time is not exceeding the limit time:
            improve the best path so far by:
                - pick two random edges, swap their position to see if it improves the 
                current path
                - if it does, improving it by calling two-opt again to straingten any crossing edges
    - Return the path with lowest cost
